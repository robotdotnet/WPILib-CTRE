#pragma once

#include "CANTalonSRX.h"

extern "C" {
  void *ctre_TalonSRX_Create3(int deviceNumber, int controlPeriodMs, int enablePeriodMs);
  void *ctre_TalonSRX_Create2(int deviceNumber, int controlPeriodMs);
  void *ctre_TalonSRX_Create1(int deviceNumber);
  void ctre_TalonSRX_Destroy(void *handle);
  void ctre_TalonSRX_Set(void *handle, double value);
  CTR_Code ctre_TalonSRX_SetParam(void *handle, int paramEnum, double value);
  CTR_Code ctre_TalonSRX_RequestParam(void *handle, int paramEnum);
  CTR_Code ctre_TalonSRX_GetParamResponse(void *handle, int paramEnum, double *value);
  CTR_Code ctre_TalonSRX_GetParamResponseInt32(void *handle, int paramEnum, int *value);
  CTR_Code ctre_TalonSRX_SetPgain(void *handle, int slotIdx, double gain);
  CTR_Code ctre_TalonSRX_SetIgain(void *handle, int slotIdx, double gain);
  CTR_Code ctre_TalonSRX_SetDgain(void *handle, int slotIdx, double gain);
  CTR_Code ctre_TalonSRX_SetFgain(void *handle, int slotIdx, double gain);
  CTR_Code ctre_TalonSRX_SetIzone(void *handle, int slotIdx, int zone);
  CTR_Code ctre_TalonSRX_SetCloseLoopRampRate(void *handle, int slotIdx, int closeLoopRampRate);
  CTR_Code ctre_TalonSRX_SetVoltageCompensationRate(void *handle, double voltagePerMs);
  CTR_Code ctre_TalonSRX_SetSensorPosition(void *handle, int pos);
  CTR_Code ctre_TalonSRX_SetForwardSoftLimit(void *handle, int forwardLimit);
  CTR_Code ctre_TalonSRX_SetReverseSoftLimit(void *handle, int reverseLimit);
  CTR_Code ctre_TalonSRX_SetForwardSoftEnable(void *handle, int enable);
  CTR_Code ctre_TalonSRX_SetReverseSoftEnable(void *handle, int enable);
  CTR_Code ctre_TalonSRX_GetPgain(void *handle, int slotIdx, double *gain);
  CTR_Code ctre_TalonSRX_GetIgain(void *handle, int slotIdx, double *gain);
  CTR_Code ctre_TalonSRX_GetDgain(void *handle, int slotIdx, double *gain);
  CTR_Code ctre_TalonSRX_GetFgain(void *handle, int slotIdx, double *gain);
  CTR_Code ctre_TalonSRX_GetIzone(void *handle, int slotIdx, int *zone);
  CTR_Code ctre_TalonSRX_GetCloseLoopRampRate(void *handle, int slotIdx, int *closeLoopRampRate);
  CTR_Code ctre_TalonSRX_GetVoltageCompensationRate(void *handle, double *voltagePerMs);
  CTR_Code ctre_TalonSRX_GetForwardSoftLimit(void *handle, int *forwardLimit);
  CTR_Code ctre_TalonSRX_GetReverseSoftLimit(void *handle, int *reverseLimit);
  CTR_Code ctre_TalonSRX_GetForwardSoftEnable(void *handle, int *enable);
  CTR_Code ctre_TalonSRX_GetReverseSoftEnable(void *handle, int *enable);
  CTR_Code ctre_TalonSRX_GetPulseWidthRiseToFallUs(void *handle, int *param);
  CTR_Code ctre_TalonSRX_IsPulseWidthSensorPresent(void *handle, int *param);
  CTR_Code ctre_TalonSRX_SetModeSelect2(void *handle, int modeSelect, int demand);
  CTR_Code ctre_TalonSRX_SetStatusFrameRate(void *handle, int frameEnum, int periodMs);
  CTR_Code ctre_TalonSRX_ClearStickyFaults(void *handle);
  void ctre_TalonSRX_ChangeMotionControlFramePeriod(void *handle, int periodMs);
  void ctre_TalonSRX_ClearMotionProfileTrajectories(void *handle);
  int ctre_TalonSRX_GetMotionProfileTopLevelBufferCount(void *handle);
  int ctre_TalonSRX_IsMotionProfileTopLevelBufferFull(void *handle);
  CTR_Code ctre_TalonSRX_PushMotionProfileTrajectory(void *handle, int targPos, int targVel, int profileSlotSelect, int timeDurMs, int velOnly, int isLastPoint, int zeroPos);
  void ctre_TalonSRX_ProcessMotionProfileBuffer(void *handle);
  CTR_Code ctre_TalonSRX_GetMotionProfileStatus(void *handle, int *flags, int *profileSlotSelect, int *targPos, int *targVel, int *topBufferRemaining, int *topBufferCnt, int *btmBufferCnt, int *outputEnable);
  CTR_Code ctre_TalonSRX_GetFault_OverTemp(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetFault_UnderVoltage(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetFault_ForLim(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetFault_RevLim(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetFault_HardwareFailure(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetFault_ForSoftLim(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetFault_RevSoftLim(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetStckyFault_OverTemp(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetStckyFault_UnderVoltage(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetStckyFault_ForLim(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetStckyFault_RevLim(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetStckyFault_ForSoftLim(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetStckyFault_RevSoftLim(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetAppliedThrottle(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetCloseLoopErr(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetFeedbackDeviceSelect(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetModeSelect(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetLimitSwitchEn(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetLimitSwitchClosedFor(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetLimitSwitchClosedRev(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetSensorPosition(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetSensorVelocity(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetCurrent(void *handle, double *param);
  CTR_Code ctre_TalonSRX_GetBrakeIsEnabled(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetEncPosition(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetEncVel(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetEncIndexRiseEvents(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetQuadApin(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetQuadBpin(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetQuadIdxpin(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetAnalogInWithOv(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetAnalogInVel(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetTemp(void *handle, double *param);
  CTR_Code ctre_TalonSRX_GetBatteryV(void *handle, double *param);
  CTR_Code ctre_TalonSRX_GetResetCount(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetResetFlags(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetFirmVers(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetPulseWidthPosition(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetPulseWidthVelocity(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetPulseWidthRiseToRiseUs(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetActTraj_IsValid(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetActTraj_ProfileSlotSelect(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetActTraj_VelOnly(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetActTraj_IsLast(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetOutputType(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetHasUnderrun(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetIsUnderrun(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetNextID(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetBufferIsFull(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetCount(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetActTraj_Velocity(void *handle, int *param);
  CTR_Code ctre_TalonSRX_GetActTraj_Position(void *handle, int *param);
  CTR_Code ctre_TalonSRX_SetDemand(void *handle, int param);
  CTR_Code ctre_TalonSRX_SetOverrideLimitSwitchEn(void *handle, int param);
  CTR_Code ctre_TalonSRX_SetFeedbackDeviceSelect(void *handle, int param);
  CTR_Code ctre_TalonSRX_SetRevMotDuringCloseLoopEn(void *handle, int param);
  CTR_Code ctre_TalonSRX_SetOverrideBrakeType(void *handle, int param);
  CTR_Code ctre_TalonSRX_SetModeSelect(void *handle, int param);
  CTR_Code ctre_TalonSRX_SetProfileSlotSelect(void *handle, int param);
  CTR_Code ctre_TalonSRX_SetRampThrottle(void *handle, int param);
  CTR_Code ctre_TalonSRX_SetRevFeedbackSensor(void *handle, int param);
}